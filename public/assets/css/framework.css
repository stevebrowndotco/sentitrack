/*

~Framework CSS~

If you need any assistance please  contact steve.brown@theaudience.com
This is a CSS Framework that is made to work anywhere. Most of it is custom written, but contains some
Twitter Bootstrap, HTML5 BoilerPlate and 3L code

*//* Configuration */
/* =File Locations
==================================*/
/* Important Locations */
/* Images */
/* The folder where all the images are stored */
/* Lots of handy icons */
/* Larger handy icons */
/* Cross Browser Supported Ajax Loader */
/* CSS3 Supported Loader */
/* =Screen Size
==================================*/
body {
  background: #141414;
  background-image: -moz-linear-gradient(top, #141414 0%, #ffffff 100%);
  background-image: -webkit-linear-gradient(top, #141414 0%, #ffffff 100%);
  background-image: -o-linear-gradient(top, #141414 0%, #ffffff 100%);
  background-image: linear-gradient(to bottom, #141414 0%, #ffffff 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}
h1 {
  text-align: center;
  font-weight: 900;
  letter-spacing: -1px;
  font-weight: 100;
  color: #f90050;
}
#container {
  position: fixed;
  top: 60px;
  left: 0;
  right: 0;
  bottom: 30px;
}
#tweetTicker li {
  float: left;
  color: #fff;
  list-style-type: none;
}
#tweetTicker {
  background: black;
  background: #333333;
  background-image: -moz-linear-gradient(top, #333333 0%, #000000 100%);
  background-image: -webkit-linear-gradient(top, #333333 0%, #000000 100%);
  background-image: -o-linear-gradient(top, #333333 0%, #000000 100%);
  background-image: linear-gradient(to bottom, #333333 0%, #000000 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  -webkit-box-shadow: 0 0 20px #000000 inset;
  -moz-box-shadow: 0 0 20px #000000 inset;
  box-shadow: 0 0 20px #000000 inset;
  -webkit-box-shadow: 0 0 20px #000000 inset;
  -moz-box-shadow: 0 0 20px #000000 inset;
  box-shadow: 0 0 20px #000000 inset;
  width: 100%;
  height: 58px;
  position: fixed;
  bottom: 0;
  -webkit-marquee-direction: left;
  -webkit-marquee-increment: medium;
  -webkit-marquee-repetition: 10;
  -webkit-marquee-speed: normal;
  -webkit-marquee-style: slide;
  font-size: 14px;
  white-space: nowrap;
  overflow: hidden;
  overflow-x: -webkit-marquee;
}
#tweetTicker .square {
  width: 10px;
  height: 10px;
  background: blue;
  margin: 3px 20px 20px 20px;
  float: left;
}
#tweetTicker ul {
  float: left;
  margin: 16px 0 0 0;
  white-space: nowrap;
}
#mask {
  position: fixed;
  z-index: 9;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.8);
}
#popup {
  position: fixed;
  top: 50%;
  height: 300px;
  margin-top: -200px;
  left: 50%;
  z-index: 10;
  width: 300px;
  background: #ffffff;
  background-image: -moz-linear-gradient(top, #ffffff 0%, #cccccc 100%);
  background-image: -webkit-linear-gradient(top, #ffffff 0%, #cccccc 100%);
  background-image: -o-linear-gradient(top, #ffffff 0%, #cccccc 100%);
  background-image: linear-gradient(to bottom, #ffffff 0%, #cccccc 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  margin-left: -150px;
  z-index: 99;
  padding: 20px;
  border-radius: 3px;
  box-shadow: 0 3px 21px rgba(0, 0, 0, 0.4);
}
#popup h2 {
  margin-top: 0;
}
#popup ul {
  margin: 0;
  padding: 0;
  list-style-type: none;
  overflow: auto;
  height: 209px;
}
#popup ul li {
  margin: 0 0 10px 0;
}
/* Core Styling */
/* HTML5 ✰ Boilerplate
 * ==|== normalize ==========================================================
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section {
  display: block;
}
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
}
audio:not([controls]) {
  display: none;
}
[hidden] {
  display: none;
}
html {
  font-size: 100%;
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}
body {
  margin: 0;
  font-size: 13px;
  line-height: 1.231;
}
::-moz-selection {
  background: #555;
  color: #fff;
  text-shadow: none;
}
::selection {
  background: #555;
  color: #fff;
  text-shadow: none;
}
a {
  color: #00e;
}
a:visited {
  color: #551a8b;
}
a:hover {
  color: #06e;
}
a:focus {
  outline: thin dotted;
}
a:hover,
a:active {
  outline: 0;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
blockquote {
  margin: 1em 40px;
}
dfn {
  font-style: italic;
}
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}
ins {
  background: #ff9;
  color: #000;
  text-decoration: none;
}
mark {
  background: #ff0;
  color: #000;
  font-style: italic;
  font-weight: bold;
}
pre,
code,
kbd,
samp {
  font-family: monospace, monospace;
  _font-family: 'courier new', monospace;
  font-size: 1em;
}
pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}
q {
  quotes: none;
}
q:before,
q:after {
  content: "";
  content: none;
}
small {
  font-size: 85%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
ul,
ol {
  margin: 1em 0;
  padding: 0 0 0 40px;
}
dd {
  margin: 0 0 0 40px;
}
nav ul,
nav ol {
  list-style: none;
  list-style-image: none;
  margin: 0;
  padding: 0;
}
img {
  border: 0;
  -ms-interpolation-mode: bicubic;
  vertical-align: middle;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 0;
}
form {
  margin: 0;
}
fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}
label {
  cursor: pointer;
}
legend {
  border: 0;
  *margin-left: -7px;
  padding: 0;
}
button,
input,
select,
textarea {
  font-size: 100%;
  margin: 0;
  vertical-align: baseline;
  *vertical-align: middle;
}
button,
input {
  line-height: normal;
  *overflow: visible;
}
table button,
table input {
  *overflow: auto;
}
button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  cursor: pointer;
  -webkit-appearance: button;
}
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
}
input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
  vertical-align: top;
  resize: vertical;
}
input:invalid,
textarea:invalid {
  background-color: #f0dddd;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td {
  vertical-align: top;
}
/* ==|== non-semantic helper classes ======================================== */
.ir {
  display: block;
  border: 0;
  text-indent: -999em;
  overflow: hidden;
  background-color: transparent;
  background-repeat: no-repeat;
  text-align: left;
  direction: ltr;
}
.ir br {
  display: none;
}
.hidden {
  display: none !important;
  visibility: hidden;
}
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}
.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}
.invisible {
  visibility: hidden;
}
.clearfix:before,
.clearfix:after {
  content: "";
  display: table;
}
.clearfix:after {
  clear: both;
}
.clearfix {
  zoom: 1;
}
/* ==|== media queries ====================================================== */
@media only screen and (min-width: 480px) {
  
}
@media only screen and (min-width: 768px) {
  
}
/* ==|== print styles ======================================================= */
@media print {
  * {
    /*     background: transparent !important; */
  
    /*     color: black !important; */
  
    text-shadow: none !important;
    /*     filter: none !important; */
  
    /*     -ms-filter: none !important; */
  
  }
  a,
  a:visited {
    /*     text-decoration: underline; */
  
  }
  a[href]:after {
    /*     content: " (" attr(href) ")"; */
  
  }
  abbr[title]:after {
    /*     content: " (" attr(title) ")"; */
  
  }
  .ir a:after,
  a[href^="javascript:"]:after,
  a[href^="#"]:after {
    /*     content: ""; */
  
  }
  pre,
  blockquote {
    /*     border: 1px solid #999; */
  
    /*     page-break-inside: avoid; */
  
  }
  thead {
    /*     display: table-header-group; */
  
  }
  tr,
  img {
    /*     page-break-inside: avoid; */
  
  }
  img {
    /*     max-width: 100% !important; */
  
  }
  @page  {
    margin: 0;
  }
  p,
  h2,
  h3 {
    /*     orphans: 3; */
  
    /*     widows: 3; */
  
  }
  h2,
  h3 {
    /*     page-break-after: avoid; */
  
  }
}
/* =Useful Colors
==================================*/
/* colors */
/* Backgrounds */
/* Consistent Padding */
/* =Typography
==================================*/
/* Colors */
/* Typography */
/* =Helpful Mixins
======================================================================================================================*/
/* =FROM TWITTER BOOTSTRAP
==================================*/
/* =FROM 3L ~ https://github.com/mateuszkocz/3l/

Note, this says it can be used with Twitter Bootstrap so I have added it in without modifications - Steve
==================================*/
/*
 *	3L was made for YOU to help you create awesome websites
 * and fill the Internet with excessive amount of Love! ♥
 *
 * Keep up your good work!
 *
 * Yours faithfully,
 * Mateusz ★ Kocz  			-> http://radiatingstar.com
 *
 * 3L:							-> http://mateuszkocz.github.com/3l
 *
 * Watch 3L on Github:		-> https://github.com/mateuszkocz/3l
 *
 * Submit a bug issue:		-> https://github.com/mateuszkocz/3l/issues?state=open
 *
 *
 * Licensed under the Apache License v2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Version: 1.3.3 (2012.08.28)
 *
 */
/*
 * To compile all of the code you need to use a compiler
 * that supports JavaScript code and guarder mixins.
 * WinLess meets those requirements. You can find it on winless.org
 *
 * If you're on a Mac and your compiler meets the requirements,
 * please, let me know via Twitter or GitHub!
 *
 */
/* ACTIVATE SUPPORTING CLASSES */
/* Uncomment ones you want to use or put them in html or body elements in your style sheet. */
/* For the explanation what those classes do, read further. */
/*
 * SEO & HTML Debugging
 *
 * A useful supporting class that will help a bit with your SEO
 * and usability of your website.
 *
 * Creating a website is a serious business, but sometimes you may
 * forget about some important details. This class will help you.
 * It will let you know when you haven't put an alt attribute on image
 * or kept that attribute empty, when you haven't typed a URL in anchor or when
 * anchor link has rel=nofollow attribute. It will also show you an alert
 * message if you don't have a <title> tag and description or left them empty*.
 *
 * If any of the errors described above happens, according element will
 * get a red outline border drawing your attention and asking for some love
 * or you will get a message with the same purpose.
 *
 * *** * The <title> reminder can alert you even if you have a <title> tag.
 * ***	This happens if you have a <link> tag (usually used for style sheets)
 * ***	before <title> in your HTML. Just change the order of <link> and
 * ***	<title> and you're cool.
 *
 * How to:
 * Place the .seo-helper class in html element. That's it!
 *
 * *** Example: html {.seo-helper}
 *
 * That way every element on your page will be affected
 * by this rule. You can also place it in any other container
 * class element in your code (body, div.wrapper, article and so on)
 * if you don't want for some reasons to check for bugs on whole page
 * but in single area.
 *
 * Caution! Do not forget to delete this class before finishing your
 * project, unless you want to keep it in continuous project (like blog)
 * and debug every new content on your site. But then you might consider
 * restyling this class to be a bit more eye-pleasing.
 *
 * This may not work in every browser, but since you are a web
 * developer/designer you're probably already using a bleeding
 * edge nightly alpha back-door version of browser, so no problem!
 * It's probably the only class you don't need to care about how
 * your visitors will see it!
 *
 * *** Aside - How it works:
 * *** Section only for people who don't know yet what attribute
 * *** selectors and negation pseudo-class are.
 * ***
 * *** Using negation pseudo-class is like saying "target every element x
 * *** that doesn't have attribute y" or "target every element exept (but 'not') z".
 * *** You can read more about that here ->www.w3.org/TR/selectors/#negation.
 * ***
 * *** Attribute selectors are rules that target elements that have
 * *** some specified attributes (rel, alt, href etc.) and/or specified
 * *** value of this attributes. Read more on this topic here
 * *** ->www.w3.org/TR/selectors/#selectors.
 *
 * For a further explanation and a demo, refer to:
 * -> http://radiatingstar.com/how-to-improve-seo-with-css
 *
 * Why img:not([alt]), img[alt=""] and img[alt^=" "]?
 * First targets images that don't have an alt attribute, second targets
 * ones that have this attribute but it's left empty (probably left by
 * automatic completion of html editor), third is just in case - it
 * might have been left by html editor or manually "to do it later" (clearly
 * a space at the beginning of an alt can't be anything good).
 *
 * Why a[href=""]?
 * If you write an anchor text and leave href to copyPaste URL later,
 * it will reminding you about that.
 *
 * Why a[rel="nofollow"]?
 * For some reasons links on your site may have this attribute and this
 * may generate a huge SEO problem. Better fix it ASAP. (On the other hand
 * nofollow links might be useful in some situations. See here:
 * -> http://en.wikipedia.org/wiki/Nofollow#Control_internal_PageRank_flow)
 *
 * Why div:empty, span:empty, li:empty, p:empty, td:empty, th:empty?
 * It'll just check if you have some redundancy (empty elements) in you code.
 *
 */
/*
 * Box-sizing
 *
 * Change the basic box-model to the one you want.
 *
 * Basic box-model defines the width and height of an object only as a size of
 * object's content area. In order to know exactly how big is the object you need
 * to add its padding and borders. This may result in many unwanted behaviours.
 * That's why you can define how you want the browser to calculate the width/height:
 * with or without padding, with or without borders.
 *
 * To use this feature just put a value you want:
 * -- content-box ("content" works too) - it's default value from basic model.
 * -- padding-box (also "padding") - width and height declarations will include paddings.
 * -- border-box (and "border") - border and padding included.
 *
 * Usage:
 * 1. .box-sizing(content-box), .box-sizing(content) and .content-box-sizing* for box-sizing: content-box.
 * 2. .box-sizing(padding-box), .box-sizing(padding) and .padding-box-sizing* for box-sizing: padding-box.
 * 3. .box-sizing(border-box), .box-sizing(padding) and .border.box-sizing* for box-sizing: border-box.
 *
 * * Beware not to use those properties without -sizing suffix thus suffixless classes are for background-clip (see this class below).
 *
 * Resources:
 * -- http://paulirish.com/2012/box-sizing-border-box-ftw/
 *
 * Browsers support: IE8+ and every other.
 * Notable lack of support: IE7-
 *
 */
/*
 * Background-clip
 *
 * Clips the object's background to the desired box according to the box-model.
 *
 * To use this class simply put into an object a .background-clip(box) class,
 * where box means the desired box (see below). You can also use a shorter class
 * .bg-clip or class that corresponds to the clipping you want to get (.content-clip,
 * .padding-clip, .border-clip).
 *
 * Arguments that comes into (box) are:
 * -- content-box or content for content clip,
 * -- padding-box or padding for padding clip,
 * -- border-box or border for border clip.
 * *** You can use values either with or without "-box" suffix.
 *
 * Browsers support: IE9+ and every other.
 * Notable lack of support: IE8-
 *
 */
/*
 * Box-shadow
 * Create a shadow behind or inside the element.
 *
 * Usage:
 * In .box-shadow() brackets put arguments for every single shadow. Separate
 * each shadows' arguments with comma. You can put up to five shadows
 * by default but feel free to add a class with as many as you want.
 * Just check how it is done.
 *
 * You can use a default box-shadow which will create a shadow with
 * 0px x and 1px y offsets, 3px of blur and in black colour with 25% transparency.
 * Just place a .box-shadow class without any arguments.
 *
 * Box-shadow property takes following arguments:
 *
 * 1. inset [optional].
 * 2. x-offset [required].
 * 3. y-offset [required].
 * 4. blur [optional].
 * 5. spread [optional].
 * 6. color [optional/required].
 *
 * Resources:
 * -- developer.mozilla.org/en/CSS/box-shadow
 *
 * Browsers support: IE9, Fx3.5, Chrome, Opera, Safari, Opera Mobile, Android Browser
 * Notable lack of support: IE8-, Opera Mini
 *
 * Example:
 * Two box-shadows: one is 1px offset, black, second one is green with 30% opacity, inset,
 * with 5px offsets, 3px of blur and 1px spread.
 * .box-shadow(1px 1px black, inset 5px 5px 3px 1px fade(green,30%)) // fade(colour,XX%) is a LESS native function
 *																							// that adds alpha channel to colour. Instead of fade()
 *																							// you can also use rgba or hsla colours declaration.
 *
 */
/*
 * Border-radius
 * Round the element's corners.
 *
 * Usage:
 * Border-radius property takes one to four arguments with px, em and %
 * values and round the element's corners accordingly. You can make
 * ellipticaly roundeded corners putting two sets of values separated with
 * comma using .elliptical-border-radius class. In order to round a single
 * corner use .round-corner class. This class takes two sets of arguments.
 * First one is a declaration of corner you want to round (top-left, top-right,
 * bottom-right, bottom-left), second one (separated from the first with comma),
 * is a set of values in px, em or % that round choosen corner. Second
 * declaration can have one (for circle rounding) or two values (for
 * elliptical rounding).
 *
 * For further explanation of the border-radius property, refer to the
 * resources section above.
 *
 * Resources:
 * -- developer.mozilla.org/en/CSS/border-radius
 *
 * Browsers support: IE9, Fx3.5, Chrome, Opera, Safari, Opera Mobile, Android Browser
 * Notable lack of support: IE8-, Opera Mini
 *
 * Example:
 * 1. Round every corner of the element with 10px radius.
 *		.border-radius(10px)
 * 2. Round top-left and bottom-right corners by 10px, top-right
 *		and bottom-left corners by 20px.
 *		.border-radius(10px 20px)
 * 3	Exemplary use of the .elliptical-border-radius class.
 * 	.elliptical-border-radius(10px 20px 30px, 40px 50px 60px 70px)
 * 4. Round top-right corner by 10px and 20px (elliptical).
 * 	.round-corner(top-right, 10px 20px)
 *		.border-top-right-radius(10px 20px) // Alternate method.
 * 5. Round similar corners.
 * 	.border-top-radius(20px 10px); // top-left + top-right (elliptical)
 *		.border-left-radius(5px);		 // top-left + bottom-left
 *
 */
/*
 * Opacity
 * Make an object transparent.
 *
 * Opacity takes values between 0.0 (invisible) to 1.0 (default - full
 * visibility) but 3L lets you also use percentages and values from >1 to 100.
 *
 * If you want an element with transparency 1, .5 or 0, use these classes:
 * .not-transparent., .half-transparent, .transparent.
 *
 * Browsers support: full (IE6+)
 * Caution! According to -> caniuse.com/#search=opacity, transparency doesn't
 * work well with PNG images that are itself transparent (use alpha channel) in IE8-.
 *
 * Aside:
 * Do we need the ability to set opacity in numbers from 1 to 100
 * and in percentages? I think we do, because:
 * 1. You need to use integer numbers in filter property for IE,
 * 	so there is a possibility that someone will type this kind
 *		of value, instead of [0,1].
 *	2. LESS has a fade() function that uses percentages to makes
 * 	colours (semi)transparent, so using percentages here will
 *		result in more consistent code (same unit in similar situation).
 *	3. Percentages are more intuitive when it comes to transparency and
 * 	opacity since graphic editors like Photoshop and GIMP use them.
 *
 */
/*
 * Gradient
 * Create a beautiful gradient without images.
 *
 * Pick a type of a gradient you want to have and put colours in
 * brackets. You can put either two or three colours. In the first case
 * the default colour for old browsers will be the same as the first colour provided.
 * In the second case you can set that colour as a third argument.
 *
 * The default class - .gradient - is the same as .vertical-gradient.
 *
 * You can choose from four types of gradients:
 * 1. Vertical - colour will change from top to bottom.
 * 2. Horizontal - change is from left to right.
 * 3. Diagonal - from top-left to bottom-right.
 * 4. Radial - from the centre of an element to its borders.
 *
 * Gradients tend to be tricky. There's no support for this property
 * in older IE, but "filter" comes to the rescue. It can generate
 * only horizontal and vertical gradients, though. Also IE9 has some
 * strange behaviour -> css3wizardry.com/2010/10/29/css-gradients-for-ie9/.
 * To provide the best experience for your visitors you should use
 * gradient generator (refer to resources above) with "IE9 Support" option checked.
 *
 * Resources:
 * -- gradient generator with broad browsers support and some advanced options:
 * 	-> www.colorzilla.com/gradient-editor/
 * -- gradient is a powerful tool - you can generate shapes as a background!
 * 	-> lea.verou.me/css3patterns/
 *
 * Browsers support: almost full
 * Notable lack of support: Opera mini
 * Caution! IE6 - IE8 use filter property that can generate only vertical and
 * horizontal gradients. For the best experience in IE9 use gradient generator
 * mentioned above in the resources.
 *
 */
/*
 * Background-size
 * Scale (or not) your background image.
 *
 * This property takes following values:
 * -- auto [default] - it does nothing when used alone; when used with a value
 * 	it makes sure that image will keep its aspect ratio while being stretched
 * 	to the required size. (See: examples 3. and 4.)
 * -- contain - scale image to the first border it meets;
 *		it may leave some area uncovered but keeps image's aspect ratio,
 * -- cover - scale image to the second border it meets;
 * 	cover all area but part of an image may not be shown. The image keeps its aspect ratio.
 * -- px, em, % - scale image according to declared value;
 * 	you can declare one value (x-size) or two values for each size.
 *		Using (100%, 100%) stretch the image to cover full area but may not
 *		keep its aspect ratio. When you use percentages keep in mind that XX%
 * 	means XX% of the element size, not XX% of the background image.
 *
 * Consider adding background-repeat property to avoid unwanted repetition of background.
 *
 * Browsers support: IE9+, Fx3.6+, Chrome, Safari, Opera, Opera Mini, Opera Mobile, Android Browser
 * Notable lack of support: IE8-
 *
 * Examples:
 * 1. .background-size(contain);
 * 2. .background-size(cover);
 * 3. .background-size(70%); 		 // = (70% auto). Image is scaled to take 70% of width
 *									 		 // of the element and it keeps its own aspect ratio.
 * 4. .background-size(auto, 70%) // Image is scaled to take 70% of element's
 * 										 // height and keeps aspect ratio.
 * 5. background-size(70px 7em);  // Size of the background image is now 70px (width) x 7em (height).
 * 6. background-size(70px,7em);  // Same as above. Comma is fine too.
 *
 */
/*
 * Columns layout
 *
 * Divide a block of text into columns as seen in newspapers.
 *
 * Basic usage:
 * Use .columns() class providing in brackets arguments for columns.
 * Non of those arguments are required, but unless you provide one, columns
 * layout won't work. Available arguments:
 * -- integer - declare a column-count. Unless declared, their width will
 * 	equal to division of the block's width minus column-gaps and declared integer.
 * 	Default value is "auto" which means that width of columns will be determined
 * 	by column-width value.
 * -- width - declare every column width in px, em and % (of containing block).
 * 	Default value is "auto" - column width will be equal to division of the
 *		block's width and declared column-count
 *
 * Usage of supporting classes:
 * You can declare the gaps between columns by .column-gap() class that takes
 * width type argument. Default value is "normal" and equals to 1em.
 *
 * Declare a vertical rule between columns using .column-rule(). It's the same
 * type of declaration as in borders, that is width, style and colour. By default
 * there is no rule.
 *
 * Browsers support: IE10+, Fx, Chrome, Safari, Opera, Opera Mobile, Android Browser
 * Notable lack of support: IE9-, Opera Mini
 *
 * Example:
 * 1. .column(2, 20px) // Two columns with 20px width.
 * 2. .column(5) // Five columns layout.
 * 3. element {
 * 		.column(100px);						// A 100px width columns
 * 		.column-gap(10px);					// with 10px gap between
 * 		.column-rule(1px solid black);	// and 1px thick, solid, black vertical rule.
 *		}
 *
 */
/*
 * Transform
 * 2D and 3D transformation of an object.
 *
 * You can use classes dedicated to specifics transformation, but if you plan
 * to use multiple transformation on an object, use general classes .transform
 * or .transform3d instead. Otherwise the latter transform will override the former.
 * If you want to use some of the 3D transformations, use .transform3d class. It
 * has a 3D specific property transform-style included. You can put both 3D and 2D
 * transformations in .transform3D.
 *
 * Transforms don't affect an object's place in a document and its environment
 * so there's no risk of crashing a layout.
 *
 * Transformations characteristics:
 * -- Rotate takes one argument and rotate object clockwise by specified angle (in deg).
 * -- Scale takes one or two arguments (x,y). If y is not specified it is assumed that x = y.
 * 	Arguments in interval (0,1) shrink the object. Arguments >1 makes it bigger.
 * -- Skew takes one or two arguments (x,y). If y is not specified it is assumed that y = 0 (no y-skew).
 * 	Arguments must be in deg.
 * -- Translate takes one or two arguments (w,y). If y is not specified it is assumed y = 0 (no y-translate).
 * 	Arguments are in px or em. Translate moves the object by specified value.
 *
 * Sometimes you might want to control the point that is the relative base of transformations.
 * For that reason use .transform-origin class. That class takes one or two values.
 * First value defines horizontal position of that point, second refers to vertical position.
 * In case you provide only the first value, the second is set to 50%. Default value is (50% 50%).
 * You can use three types of values:
 * -- pixels that place origin point in position according to the top-left corner of an element
 * 	to its bottom-right corner. Negative values allowed - in that case position goes to the left
 *		and top from the top-left corner,
 * -- percentages that are relative to object's width and height. As in px, the original position
 *		is top-left corner (0% 0%), and goes to bottom-right (100% 100%). Negative values does the
 *		same as in px.
 * -- keywords: left / center / right for x-axis and top / center / bottom for y-axis.
 *
 * For 3D transformations you can set a perspective using .perspective() class and putting
 * value in brackets .
 *
 * Browsers support: IE9+, Fx3,5+, Chrome, Safari, Opera, Opera Mobile, Android Browser
 * Notable lack of support: IE8-*, Opera Mini
 * * You can use some of the transformation in older IE through filter property.
 *   To generate that property refer to -> css3please.com.
 *   You can also emulate scale property with zoom property.
 *
 * Examples:
 * 1. .scale(2,.5) // Stretch an object two times and shrink in height by half.
 * 2. .rotate(180deg) // Rotate an object by 180deg.
 * 3. .transform(.scale(2,.5),rotate(180deg)) // Does the combined transformation from examples above.
 * 4. .transform-origin(20% top) // Place the transformation origin at the top, 20% of the object's
 * 										// width to the right from the top-left corner.
 */
/*
 * Transition
 * Animate a change between different object states.
 *
 * You can use this class to animate change of up to 5 different properties.
 * If you need more that that (wow!) it's easy to add more of these classes.
 *
 * Transition takes 4 values:
 * -- transition-property - choose a property you want to animate (margin, colour etc.).
 * 	Default value is "all" which will animate every change that might happen. It's a good
 * 	idea to explicitly write this value if you want to animate everything, though. We can't
 * 	be sure if in the future default state won't change to "none", which will break the whole transition.
 * -- transition-duration - specifies how long transition animation will have to take
 *		until animation is finished. Put values in s (seconds) or ms (milliseconds).
 * 	Required value, since default state is 0s (no animation occurs).
 * -- transition-timing-function - this value describe an acceleration function. It can
 *		really affect overall experience, so it's good idea to pay attention to that.
 * 	Timing function takes 4 number values of keywords: linear, ease, ease-in,
 * 	ease-in-out, ease-out. For further explanation refer to ->developer.mozilla.org/en/CSS/timing-function
 * 	Default value is "ease".
 * -- transition-delay - in seconds or millisecond describes how long transition will wait
 * 	until it occurs after a triggering requirement was met. Default value is 0 - instant animation.
 *
 * In case you want to put a transformation property into transition effect, use
 * the .transition-transform class. This class is prepared to automatically add
 * many browsers prefixes required in that case. It is also a bit future friendly,
 * but all at all using transitions on transform is very risky.
 * -> http://radiatingstar.com/transition-with-transform-cant-be-future-proof
 *
 * Usage:
 * For .transition class, put in brackets at least a time value. If you want to animate more than one
 * property or animate everything with different functions, put up to 5 declarations separated with
 * commas. If one of the property you want to animate is "transform" _and_ you want to animate every
 * other properties (or at least not with the same functions), use .transition-transform. As a first
 * value put a time duration for transform property. Do not write this property though. It's auto-added
 * for the first set of values. Add other properties after commas. Refer to the example 3.
 *
 * Browsers support: IE10+, Fx4+, Chrome, Opera, Safari, Opera Mobile, Android Browser
 * Notable lack of support: IE9-, Fx3.6-, Opera Mini
 * *** Transition provides only a visual effects between states. It's perfectly
 * *** safe to use. Users with older browser just won't see a phase of changing.
 *
 * Examples:
 * 1. .transition (all 1s); // Animate all properties for 1 second.
 * 2. .transition (background-color 5s, margin 1s linear 5s) // Animate change of background-color for 5s
 * 																			 // and after 5s animate margin change for 1s.
 * 3. .transition-transform (2s linear, padding 3s) // Animate change of transform property (no "transform" declared!)
 * 																 // and padding property.
 */
/*
 * Animations
 *
 * Create an awesome animation!
 *
 * This class takes from two to five properties:
 * -- animation-name [required] - declare your @keyframes animation name. See below
 * 	for an easy way to make @keyframes!
 * -- animation-duration [required] - declare how long will it take for an animation
 * 	to reach end. Value in seconds (s) or milliseconds (ms).
 * -- timing-function - it's the same property as in transition. Refer to
 * 	that topic for further explanation.
 * -- iteration-count - how many times an animation will repeat. It takes integer
 * 	or "infinite" keyword (for infinite repetition). Default value is 1.
 * -- direction - indicates whether the animation should play in reverse on
 * 	alternate cycles. Refer to ->developer.mozilla.org/en/CSS/animation-direction
 * 	for better explanation. To declare a direction use normal [default value],
 * 	alternate, reverse or alternate-reverse keyword.
 *
 * Resources:
 * -- developer.mozilla.org/en/CSS/animation
 *
 * Creating @keyframes:
 * Write in your .less file:
 * *** @import 'animationX.less';
 * where X stands for a number between 1 and 5. Then create a class
 * *** .animationX () {}
 * and in {} write declarations you normally write in @keyframes.
 * Then just put an .animation(animationX [other animation properties]) class in your element.
 * That's all!
 *
 * Example:
 * .toBeAnimated {
 * 		// Animation with every possible value declared. //
 *			.animation(animation1 5s linear 3s infinite alternate);
 *			}
 * // Importing prefixed @keyframes for animation1.
 * @import 'animation1';
 *
 * // Declaring @keyframes for animation. Only once!
 * .animation1() {
 *			from {margin-top: 3px;}
 *			to {margin-top: 333px;}
 *			}
 *
 */
/* =Loader
==================================*/
.loader {
  background: url('/design/images/ajax-loader.gif') no-repeat;
  width: 30px;
  height: 30px;
  margin: 50px auto;
}
/* Required Modernizr */
.csstransitions .loader {
  background: url('/design/images/layout/loader-css3.png') no-repeat 50% 40%;
  -webkit-animation: rotate 1.5s infinite linear;
  -moz-animation: rotate 1.5s infinite linear;
  -o-animation: rotate 1.5s infinite linear;
  animation: rotate 1.5s infinite linear;
  width: 50px;
  height: 50px;
  left: 50%;
  top: 50%;
  margin: -25px 0 0 -25px;
  padding: 0;
  position: absolute;
}
.csstransitions .boxy-loader .loader {
  background: url('/design/images/ajax-loader.gif') no-repeat;
  width: 30px;
  height: 30px;
  margin: 50px auto;
  -webkit-animation: normal;
  -moz-animation: normal;
  -o-animation: normal;
  animation: normal;
  top: 0;
  left: 0;
}
/* =Sections
==================================*/
section.main-section {
  border: 1px solid #E1E1E1;
  border-radius: 5px;
  box-shadow: 0 1px 0px white inset;
  background: white;
  background: rgba(255, 255, 255, 0.7);
  padding: 0.5em 0;
  position: relative;
}
section.main-section .main-section-inner {
  padding: 0 1.5em;
}
/* =Dropdown Panels
==================================*/
.dropdown-panel {
  background: #ffffff;
  background-image: -moz-linear-gradient(top, #ffffff 0%, #f8f8f8 100%);
  background-image: -webkit-linear-gradient(top, #ffffff 0%, #f8f8f8 100%);
  background-image: -o-linear-gradient(top, #ffffff 0%, #f8f8f8 100%);
  background-image: linear-gradient(to bottom, #ffffff 0%, #f8f8f8 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  -webkit-border-radius: 0 0 3px 3px;
  -moz-border-radius: 0 0 3px 3px;
  border-radius: 0 0 3px 3px;
  -webkit-border-radius: 0 0 3px 3px;
  -moz-border-radius: 0 0 3px 3px;
  border-radius: 0 0 3px 3px;
  border: 1px solid #CCC;
  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);
  position: relative;
  padding: 1em;
  position: absolute;
  top: 29px;
  border-top: none;
  z-index: 1;
}
.dropdown-panel h3 {
  background: none;
  font-size: 16px;
  border-bottom: 1px solid #eeeeee;
  font-weight: bold;
  margin: 0;
}
.dropdown-panel .action-buttons {
  position: absolute;
  top: 13px;
  right: 11px;
}
/* =Table UI
==================================*/
.ie8 .table-ui {
  border-left: 1px solid #CCC !important;
  border-top: 1px solid #ccc !important;
}
.ie8 .table-ui tr {
  border-bottom: none;
}
.ie8 .table-ui tr td {
  border-bottom: 1px solid #CCC !important;
}
.table-ui {
  width: 100%;
  border: 1px solid rgba(0, 0, 0, 0.1);
  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);
  margin-bottom: 10px;
  text-align: left;
  border-collapse: collapse;
  border-spacing: 0;
}
.table-ui tr {
  border-bottom: 1px solid #CCC;
}
.table-ui tr .grip-icon {
  position: absolute;
  opacity: 0;
  cursor: move;
  left: 3px;
  padding: 7px 0;
}
.table-ui td.td-tight {
  padding: 0 !important;
}
.ie8 .table-ui tr td {
  border-bottom: none;
}
.table-with-columns td,
.table-with-columns th {
  border-right: 1px solid #CCC;
}
.table-with-padding td,
.table-with-padding th {
  padding: 10px !important;
}
.table-fixed {
  table-layout: fixed;
}
.table-ui thead {
  margin: 0;
  padding: 0;
  list-style-type: none;
  background: #eee;
  color: #000;
  height: 30px;
  line-height: 2.2;
}
.table-ui thead tr {
  background: inherit;
}
.table-ui th:hover .down-arrow-icon,
.table-ui th:hover .up-arrow-icon {
  opacity: 1;
}
.table-with-stripes tr:nth-child(even),
.table-with-stripes tr.tr-even {
  background: #f7f7f7;
}
.table-ui td {
  padding: 0;
  margin: 0;
  vertical-align: middle;
}
/* =DL UI
==================================*/
.dl-ui dt {
  float: left;
  margin-bottom: 10px;
}
.dl-ui dd {
  margin-bottom: 10px;
}
/* =Fake Table UI
==================================*/
/* Framework */
.fake-table-ui {
  width: 100%;
  border: 1px solid rgba(0, 0, 0, 0.1);
  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);
  margin-bottom: 10px;
}
.fake-table-ui .header {
  width: 100%;
  margin: 0;
  padding: 0;
  list-style-type: none;
  background: rgba(58, 67, 75, 0.1);
  color: #000;
  height: 30px;
  line-height: 2.2;
}
.fake-table-ui .header li,
.fake-table-ui .post-row {
  float: left;
  height: 100%;
}
.fake-table-ui .col {
  padding: 0 1%;
  width: auto;
}
/* =Legend
==================================*/
.legend-container {
  font-size: 12px;
  position: absolute;
  top: 26px;
  right: 11px;
  text-align: right;
}
.legend-container .legend-key {
  float: left;
  margin-right: 15px;
}
.legend-container .legend-key .key {
  width: 9px;
  height: 9px;
  background: red;
  display: inline-block;
  margin-right: 2px;
}
.legend-container .legend-key .key-1 {
  background: #4fd7ff;
}
.legend-container .legend-key .key-2 {
  background: #ccf3ff;
}
/* =Form UI
==================================*/
input[type=text],
input[type=password] {
  border: 1px solid #b5b5b5;
  -webkit-box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13);
  -moz-box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13);
  box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13);
  -webkit-box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13);
  -moz-box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13);
  box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13);
}
textarea {
  border: 1px solid #b5b5b5;
  -webkit-box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13);
  -moz-box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13);
  box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13);
  -webkit-box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13);
  -moz-box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13);
  box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13);
}
input[type=text]:focus,
input[type=password]:focus {
  outline: none;
  -webkit-box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13), 0px 0px 5px rgba(116, 80, 137, 0.2), 0 0 0;
  -moz-box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13), 0px 0px 5px rgba(116, 80, 137, 0.2), 0 0 0;
  box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13), 0px 0px 5px rgba(116, 80, 137, 0.2), 0 0 0;
  -webkit-box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13), 0px 0px 5px rgba(116, 80, 137, 0.2), 0 0 0;
  -moz-box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13), 0px 0px 5px rgba(116, 80, 137, 0.2), 0 0 0;
  box-shadow: inset 2px 2px 6px rgba(0, 0, 0, 0.13), 0px 0px 5px rgba(116, 80, 137, 0.2), 0 0 0;
}
input.search {
  display: block;
  padding: 4px 4px 4px 28px;
  border: 1px solid #aaa;
  outline: none;
  background: #ffffff url(/design/images/icon/magnifying-glass.png) no-repeat 8px 5px;
  -webkit-box-shadow: inset 4px 4px 7px rgba(0, 0, 0, 0.22);
  -moz-box-shadow: inset 4px 4px 7px rgba(0, 0, 0, 0.22);
  box-shadow: inset 4px 4px 7px rgba(0, 0, 0, 0.22);
  -webkit-box-shadow: inset 4px 4px 7px rgba(0, 0, 0, 0.22);
  -moz-box-shadow: inset 4px 4px 7px rgba(0, 0, 0, 0.22);
  box-shadow: inset 4px 4px 7px rgba(0, 0, 0, 0.22);
  width: 129px;
  margin: auto;
}
select {
  display: inline-block;
  height: 18px;
  padding: 4px;
  margin-bottom: 9px;
  font-size: 13px;
  line-height: 18px;
  color: #555555;
  border: 1px solid #cccccc;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
}
select {
  height: 28px;
  /* In IE7, the height of the select element cannot be changed by height, only font-size */

  *margin-top: 4px;
  /* For IE7, add top margin to align select with labels */

  line-height: 28px;
}
select[disabled] {
  color: #CCC;
  border: 1px solid #DDD;
}
select.client-select {
  width: 200px;
}
.page-form {
  max-width: 700px;
}
.page-form h3 {
  padding: 0;
  margin: 0 0 10px 0;
  background: none;
}
.page-form label {
  width: 100%;
  display: block;
  color: black;
  font-weight: bold;
  margin-bottom: 3px;
}
.page-form label span.note {
  color: #666;
  font-weight: normal;
  font-style: italic;
}
.page-form input[type="text"],
.page-form textarea,
.page-form input[type="password"] {
  padding: 0.5em 0.5em;
  width: 80% !important;
  margin-bottom: 15px;
}
.page-form input[type="text"]:focus,
.page-form textarea:focus {
  outline: 1px solid #7fbf4d;
}
.page-form input[type="checkbox"] {
  margin-right: 10px;
}
.page-form textarea {
  padding: 0.5em 0.5em;
  width: 80% !important;
}
.page-form ul,
.page-form ol {
  margin: 0;
  padding: 0;
  list-style-type: none;
}
.page-form dd {
  margin: 0 0 10px 0;
}
.page-form fieldset {
  background: #fff;
  padding: 2em 2em 2.5em 2em;
  border-bottom: 2px solid #cddbe2;
  margin-bottom: 1em !important;
  position: relative;
}
.page-form fieldset.with-numbers {
  padding: 2em 2em 2.5em 6em;
}
.page-form .step {
  text-align: center;
  color: #eee;
  font-size: 3em;
  position: absolute;
  display: block;
  width: 40px;
  height: 40px;
  left: 22px;
  top: 11px;
}
.page-form .client-select {
  width: 500px;
}
.page-form .button-input {
  margin-right: 65px;
}
.page-form fieldset .error {
  width: 80%;
}
.page-form .loader {
  height: 10px;
  margin: 10px 40%;
}
.page-form .message {
  width: 80%;
}
/* =Data Box
==================================*/
.data-box {
  height: 115px;
  float: left;
  text-align: center;
  overflow: hidden;
  position: relative;
  -webkit-transition: all 0.3s ease-in-out;
  -moz-transition: all 0.3s ease-in-out;
  -o-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  -webkit-transition: all 0.3s ease-in-out;
  -moz-transition: all 0.3s ease-in-out;
  -o-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  line-height: 1.4;
}
.data-box .positive-circle-icon,
.data-box .negative-circle-icon,
.data-box .neutral-up-circle-icon,
.data-box .neutral-down-circle-icon {
  display: inline-block;
  position: static !important;
  vertical-align: middle;
}
.data-box-inner {
  border: 1px solid #f5f5f5;
  height: 94%;
  overflow: hidden;
  border-radius: 5px;
  background: #fcfcfc;
}
.data-box .icon {
  position: absolute;
  width: 17px;
  height: 17px;
  top: 8px;
  left: 10px;
  cursor: pointer;
}
.data-box .percentChange {
  top: 9px;
  right: 14px;
  position: absolute;
  font-size: 14px;
  font-style: italic;
  text-align: right;
  width: auto !important;
  height: 16px !important;
  font-weight: bold;
}
.data-box .positive {
  color: #5D9800;
}
.data-box .positive img {
  vertical-align: 4px;
}
.data-box .negative {
  color: #A32431;
}
.data-box .negative img {
  vertical-align: 4px;
}
.editable-text {
  background: none;
  border: 1px solid transparent;
}
.editable-text:hover {
  background: rgba(255, 255, 243, 0.7);
  border: 1px dotted #CBA35E !important;
}
.editable-text.editing:hover {
  border: none !important;
}
/* =Screen Mask 
==================================*/
#screen-mask {
  /* Used to darken the screen. Only required once per usage. */

  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.85);
  position: fixed;
  z-index: 98;
  opacity: 0;
  top: 0 !important;
}
/* =Tooltip
==================================*/
.tooltip {
  border-radius: 5px;
  background: black;
  max-width: 150px;
  color: #fff;
  text-align: center;
  padding: 5px;
}
@-webkit-keyframes rotate {
  from {
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@-moz-keyframes rotate {
  from {
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@-o-keyframes rotate {
  from {
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes rotate {
  from {
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@-webkit-keyframes throb {
  0% {
    opacity: 0.006;
    filter: alpha(opacity=0.6);
    opacity: 0.6;
    filter: alpha(opacity= 60 );
  }
  50% {
    opacity: 0.01;
    filter: alpha(opacity=1);
    opacity: 1;
    filter: alpha(opacity= 100 );
  }
  100% {
    opacity: 0.006;
    filter: alpha(opacity=0.6);
    opacity: 0.6;
    filter: alpha(opacity= 60 );
  }
}
@-moz-keyframes throb {
  0% {
    opacity: 0.006;
    filter: alpha(opacity=0.6);
    opacity: 0.6;
    filter: alpha(opacity= 60 );
  }
  50% {
    opacity: 0.01;
    filter: alpha(opacity=1);
    opacity: 1;
    filter: alpha(opacity= 100 );
  }
  100% {
    opacity: 0.006;
    filter: alpha(opacity=0.6);
    opacity: 0.6;
    filter: alpha(opacity= 60 );
  }
}
@-o-keyframes throb {
  0% {
    opacity: 0.006;
    filter: alpha(opacity=0.6);
    opacity: 0.6;
    filter: alpha(opacity= 60 );
  }
  50% {
    opacity: 0.01;
    filter: alpha(opacity=1);
    opacity: 1;
    filter: alpha(opacity= 100 );
  }
  100% {
    opacity: 0.006;
    filter: alpha(opacity=0.6);
    opacity: 0.6;
    filter: alpha(opacity= 60 );
  }
}
@keyframes throb {
  0% {
    opacity: 0.006;
    filter: alpha(opacity=0.6);
    opacity: 0.6;
    filter: alpha(opacity= 60 );
  }
  50% {
    opacity: 0.01;
    filter: alpha(opacity=1);
    opacity: 1;
    filter: alpha(opacity= 100 );
  }
  100% {
    opacity: 0.006;
    filter: alpha(opacity=0.6);
    opacity: 0.6;
    filter: alpha(opacity= 60 );
  }
}
/* All Fonts
==================================*/
body,
button,
input,
select,
textarea {
  font-family: 'proxima-nova', 'helvetica neue', 'helvetica', 'arial', 'sans-serif';
  color: #222;
  font-weight: 300;
}
/* Links
==================================*/
a,
a:visited {
  color: inherit;
  text-decoration: none;
}
a:hover,
a:visited:hover {
  text-decoration: underline;
  color: #ef2970;
}
p a,
a.text,
a.text:visited {
  border-bottom: 1px solid #ef2970;
  padding-bottom: 2px;
  -webkit-transition: color 0.08s linear;
  -moz-transition: color 0.08s linear;
  -o-transition: color 0.08s linear;
  transition: color 0.08s linear;
  -webkit-transition: color 0.08s linear;
  -moz-transition: color 0.08s linear;
  -o-transition: color 0.08s linear;
  transition: color 0.08s linear;
}
p a:hover,
a.text:hover {
  text-decoration: none;
  color: #ef2970;
}
.danger-link {
  color: red;
  border-bottom: 1px solid #c00000;
}
.danger-link:hover {
  text-decoration: none;
  background: #c00000;
  color: #fff;
}
/* Helpers
==================================*/
.strikethrough {
  text-decoration: line-through;
}
.superscript {
  font-size: small;
  vertical-align: super;
}
.positive {
  color: #3f9e35;
}
.negative {
  color: #c00000;
}
.ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.clip {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: clip;
}
.leading-text {
  font-size: 1.4em;
  margin-top: 0;
}
/* =Messages
==================================*/
.error,
.error-message {
  padding: 0.25em 0.5em;
  margin-bottom: 5px;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);
  background-color: #fcf8e3;
  border: 1px solid #fbeed5;
  background-color: #f2dede;
  border-color: #eed3d7;
  color: #b94a48;
  font-size: 16px;
  text-align: center;
  position: relative;
}
.error p,
.error-message p {
  margin: 0px;
}
.error a,
.error-message a {
  text-decoration: underline;
  color: #EF2970;
}
.error ul,
.error-message ul,
.error li,
.error-message li {
  list-style-type: none;
  margin: 0;
  padding: 0;
}
.error,
.error-message {
  list-style-type: none;
}
.general-message {
  position: relative;
  padding: 0.25em 0.5em;
  margin-bottom: 5px;
  font-size: 16px;
  background-color: #fcf8e3;
  border: 1px solid #4ab0ff;
  background-color: #e6f8fd;
  text-align: center;
  color: #000;
}
.general-message p {
  margin: 0px;
}
.general-message a {
  text-decoration: underline;
  color: #EF2970;
}
.success-message {
  position: relative;
  padding: 0.25em 0.5em;
  margin-bottom: 5px;
  font-size: 16px;
  text-align: center;
  background-color: #f5ffe9;
  border: 1px solid #73cb00;
  color: #000;
}
.success-message p {
  margin: 0px;
}
.success-message qa {
  text-decoration: underline;
  color: #EF2970;
}
.info-message {
  position: relative;
  padding: 0.25em 0.5em;
  margin-bottom: 5px;
  margin-top: 0;
  font-size: inherit;
  background-color: #fcf8e3;
  border: 1px solid #4ab0ff;
  background-color: #e6f8fd;
  color: #000;
}
.info-message p {
  margin: 0px;
}
.info-message a {
  text-decoration: underline;
  color: #EF2970;
}
.helper-message {
  position: relative;
  font-size: 16px;
  background: #fcfcfc;
  padding: 20px;
  border: 1px solid #eee;
  border-radius: 5px;
}
.helper-message h3 {
  margin-bottom: 5px;
  font-weight: bold;
  margin-top: 5px;
}
.helper-message img {
  float: left;
  margin-right: 30px;
}
/* =Button Framework
======================================================================================================================*/
/* =Standard Button Look and Behaviour
==================================*/
.button {
  background: #ffffff;
  background-image: -moz-linear-gradient(top, #ffffff 0%, #e6e6e6 100%);
  background-image: -webkit-linear-gradient(top, #ffffff 0%, #e6e6e6 100%);
  background-image: -o-linear-gradient(top, #ffffff 0%, #e6e6e6 100%);
  background-image: linear-gradient(to bottom, #ffffff 0%, #e6e6e6 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  border: 1px solid #CCC;
  border-bottom: 1px solid #BBB;
  color: #333;
  font-size: 13px;
  line-height: 20px;
  padding: 4px 10px 3px;
  text-align: center;
  text-shadow: 0 1px 0 #EEE;
  cursor: pointer;
  display: block;
  max-width: 200px;
  -webkit-transition: all 0.1s linear;
  -moz-transition: all 0.1s linear;
  -o-transition: all 0.1s linear;
  transition: all 0.1s linear;
  -webkit-transition: all 0.1s linear;
  -moz-transition: all 0.1s linear;
  -o-transition: all 0.1s linear;
  transition: all 0.1s linear;
  font-weight: normal;
}
.button a {
  color: #fff;
}
.button:hover {
  background: #ffffff;
  background-image: -moz-linear-gradient(top, #ffffff 0%, #d9d9d9 100%);
  background-image: -webkit-linear-gradient(top, #ffffff 0%, #d9d9d9 100%);
  background-image: -o-linear-gradient(top, #ffffff 0%, #d9d9d9 100%);
  background-image: linear-gradient(to bottom, #ffffff 0%, #d9d9d9 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  color: inherit;
  text-decoration: none;
  cursor: pointer;
  -webkit-box-shadow: 0 0 6px rgba(100, 100, 100, 0.3);
  -moz-box-shadow: 0 0 6px rgba(100, 100, 100, 0.3);
  box-shadow: 0 0 6px rgba(100, 100, 100, 0.3);
  -webkit-box-shadow: 0 0 6px rgba(100, 100, 100, 0.3);
  -moz-box-shadow: 0 0 6px rgba(100, 100, 100, 0.3);
  box-shadow: 0 0 6px rgba(100, 100, 100, 0.3);
}
.button:last-child {
  margin-right: 0;
}
.button:active,
.button.checked {
  -webkit-box-shadow: inset 0 0 30px 0 #999999, 0 1px 0 0 #ffffff, 0 0 0;
  -moz-box-shadow: inset 0 0 30px 0 #999999, 0 1px 0 0 #ffffff, 0 0 0;
  box-shadow: inset 0 0 30px 0 #999999, 0 1px 0 0 #ffffff, 0 0 0;
  -webkit-box-shadow: inset 0 0 30px 0 #999999, 0 1px 0 0 #ffffff, 0 0 0;
  -moz-box-shadow: inset 0 0 30px 0 #999999, 0 1px 0 0 #ffffff, 0 0 0;
  box-shadow: inset 0 0 30px 0 #999999, 0 1px 0 0 #ffffff, 0 0 0;
}
.button:visited {
  color: black;
}
.button .icon {
  display: inline-block;
  vertical-align: text-top;
}
.button .title {
  display: inline;
  line-height: 19px;
}
.button .caret {
  margin-top: 7px;
}
/* =Rows of Buttons
==================================*/
.button-group .button {
  float: left;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
}
.button-group .button:first-child {
  border-radius: 10px 0 0 10px ! Important;
  border-right: none;
}
.button-group .button:last-child {
  border-radius: 0 10px 10px 0 ! Important;
  border-left: none;
}
/* =Button Themes
==================================*/
/* Large Button */
.button-large {
  padding: 8px;
}
.button-large .icon {
  vertical-align: bottom;
}
/* Small Button */
.button-small {
  padding: 0px 6px !important;
  height: 20px !important;
  line-height: 1.8 !important;
}
/* Disabled Button */
button[disabled],
button[disabled]:hover,
.disabled {
  background: #eeeeee;
  background-image: -moz-linear-gradient(top, #eeeeee 0%, #cccccc 100%);
  background-image: -webkit-linear-gradient(top, #eeeeee 0%, #cccccc 100%);
  background-image: -o-linear-gradient(top, #eeeeee 0%, #cccccc 100%);
  background-image: linear-gradient(to bottom, #eeeeee 0%, #cccccc 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  opacity: 0.4;
  filter: alpha(opacity=40);
  opacity: 0.4;
  filter: alpha(opacity= 40 );
  box-shadow: none;
  text-shadow: none;
  border: 1px solid #CCC;
  cursor: default !important;
}
button[disabled],
button[disabled] .span {
  cursor: default !important;
  color: #CCC;
}
/* Rounded Button */
.button-rounded {
  border-radius: 50px;
}
/* Green Button */
.button-green,
.button-green:visited {
  background: #7fbf4d;
  background-image: -moz-linear-gradient(top, #7fbf4d 0%, #63a62f 100%);
  background-image: -webkit-linear-gradient(top, #7fbf4d 0%, #63a62f 100%);
  background-image: -o-linear-gradient(top, #7fbf4d 0%, #63a62f 100%);
  background-image: linear-gradient(to bottom, #7fbf4d 0%, #63a62f 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  border: 1px solid #63A62F;
  border-bottom: 1px solid #5B992B;
  color: white !important;
  text-shadow: 0 -1px 0 #4c9021;
}
.button-green:hover,
.button-green:visited:hover {
  background: #76b347;
  background-image: -moz-linear-gradient(top, #76b347 0%, #5e9e2e 100%);
  background-image: -webkit-linear-gradient(top, #76b347 0%, #5e9e2e 100%);
  background-image: -o-linear-gradient(top, #76b347 0%, #5e9e2e 100%);
  background-image: linear-gradient(to bottom, #76b347 0%, #5e9e2e 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  cursor: pointer;
  color: white;
  box-shadow: 0 0 6px #76B347;
}
.button-green:active,
.button-green:visited:active {
  border: 1px solid #5B992B;
  border-bottom: 1px solid #538C27;
}
/* Red Button */
.button-red {
  background: #ff4660;
  background-image: -moz-linear-gradient(top, #ff4660 0%, #e84a5a 100%);
  background-image: -webkit-linear-gradient(top, #ff4660 0%, #e84a5a 100%);
  background-image: -o-linear-gradient(top, #ff4660 0%, #e84a5a 100%);
  background-image: linear-gradient(to bottom, #ff4660 0%, #e84a5a 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  border: 1px solid #cc3c50;
  border-bottom: 1px solid #932b3a;
  text-shadow: 0 -1px 0 #ff4660;
  color: #fff;
}
.button-red:visited {
  color: #fff;
}
.button-red:hover {
  background: #f24159;
  background-image: -moz-linear-gradient(top, #f24159 0%, #db4655 100%);
  background-image: -webkit-linear-gradient(top, #f24159 0%, #db4655 100%);
  background-image: -o-linear-gradient(top, #f24159 0%, #db4655 100%);
  background-image: linear-gradient(to bottom, #f24159 0%, #db4655 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  box-shadow: 0 0 6px #ff4660;
  color: white;
}
.button-red:active {
  background: #cf394e;
  background-image: -moz-linear-gradient(top, #cf394e 0%, #cf4250 100%);
  background-image: -webkit-linear-gradient(top, #cf394e 0%, #cf4250 100%);
  background-image: -o-linear-gradient(top, #cf394e 0%, #cf4250 100%);
  background-image: linear-gradient(to bottom, #cf394e 0%, #cf4250 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  color: white;
}
/* Blue Button */
.button-blue {
  background: #5bc0de;
  background-image: -moz-linear-gradient(top, #5bc0de 0%, #2f96b4 100%);
  background-image: -webkit-linear-gradient(top, #5bc0de 0%, #2f96b4 100%);
  background-image: -o-linear-gradient(top, #5bc0de 0%, #2f96b4 100%);
  background-image: linear-gradient(to bottom, #5bc0de 0%, #2f96b4 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  border: 1px solid #2F96B4;
  border-bottom: 1px solid #2F96B4;
  text-shadow: none;
  color: #fff;
}
.button-blue:visited {
  color: #fff;
}
.button-blue:hover {
  background: #2f96b4;
  background-image: -moz-linear-gradient(top, #2f96b4 0%, #2f96b4 100%);
  background-image: -webkit-linear-gradient(top, #2f96b4 0%, #2f96b4 100%);
  background-image: -o-linear-gradient(top, #2f96b4 0%, #2f96b4 100%);
  background-image: linear-gradient(to bottom, #2f96b4 0%, #2f96b4 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  box-shadow: 0 0 2px black;
  color: white !important;
}
.button-blue:active {
  background: #2f96b4;
  background-image: -moz-linear-gradient(top, #2f96b4 0%, #2f96b4 100%);
  background-image: -webkit-linear-gradient(top, #2f96b4 0%, #2f96b4 100%);
  background-image: -o-linear-gradient(top, #2f96b4 0%, #2f96b4 100%);
  background-image: linear-gradient(to bottom, #2f96b4 0%, #2f96b4 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  color: white;
}
/* Pink Button */
.button-pink {
  background: #b83654;
  background-image: -moz-linear-gradient(top, #b83654 0%, #600e27 100%);
  background-image: -webkit-linear-gradient(top, #b83654 0%, #600e27 100%);
  background-image: -o-linear-gradient(top, #b83654 0%, #600e27 100%);
  background-image: linear-gradient(to bottom, #b83654 0%, #600e27 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  border: 1px solid #bc3a56;
  border-bottom: 1px solid #84243c;
  text-shadow: none;
  color: #fff;
}
.button-pink:visited {
  color: #fff;
}
.button-pink:hover {
  background: #fa688e;
  background-image: -moz-linear-gradient(top, #fa688e 0%, #fa9fb7 100%);
  background-image: -webkit-linear-gradient(top, #fa688e 0%, #fa9fb7 100%);
  background-image: -o-linear-gradient(top, #fa688e 0%, #fa9fb7 100%);
  background-image: linear-gradient(to bottom, #fa688e 0%, #fa9fb7 100%);
  filter: progid:dximagetransform.microsoft.gradient(startColorstr='@color1', endColorstr='@color2', GradientType=0);
  box-shadow: 0 0 2px black;
  color: white !important;
}
/* Simple Button */
.button-simple {
  border: 1px solid #ddd;
  width: auto;
  background: white;
  max-width: none;
  color: #000;
}
.button-simple a {
  color: #000;
}
.button-simple:hover {
  color: #000;
  background: white;
  box-shadow: none;
}
.button-simple:hover {
  border: 1px solid #999;
}
.button-simple:active {
  border: 1px solid #7fbf4d;
}
/* Button Tight */
.button-tight {
  float: left;
  margin-right: 10px;
}
.button-tight-right {
  float: right;
}
/* Button Square */
.button-square {
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
}
/* Social Buttons */
.button-social {
  background-image: none;
  background: #fff;
  width: 170px !important;
  height: 37px;
}
.button-social:hover {
  border: 1px #7fbf4d solid;
  background: none transparent;
  background-image: none ! Important;
  box-shadow: none;
}
/* Next to input boxes */
.button-input {
  width: 30px;
  float: right;
  overflow: hidden;
  height: 30px;
  margin: 0;
  padding: 0;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
}
.button-input .icon {
  margin-top: 6px;
}
/* =Icon Framework
==================================*/
/* Any Icons */
.icon {
  width: 17px;
  height: 17px;
  display: inline-block;
}
.big-icon {
  width: 20px;
  height: 20px;
  min-width: 0;
}
/* =Icons (Specific)
==================================*/
/* Global Icons */
.up-arrow-icon {
  display: inline-block;
  width: 0;
  height: 0;
  vertical-align: middle;
  border-left: 4px solid transparent;
  border-right: 4px solid transparent;
  border-bottom: 4px solid black;
  opacity: 0.5;
  filter: alpha(opacity=50);
  opacity: 0.5;
  filter: alpha(opacity= 50 );
  content: "";
}
.down-arrow-icon {
  display: inline-block;
  width: 0;
  height: 0;
  vertical-align: middle;
  border-left: 4px solid transparent;
  border-right: 4px solid transparent;
  border-top: 4px solid black;
  opacity: 0.5;
  filter: alpha(opacity=50);
  opacity: 0.5;
  filter: alpha(opacity= 50 );
  content: "";
}
.down-arrow-icon-white {
  display: inline-block;
  width: 0;
  height: 0;
  vertical-align: middle;
  border-left: 4px solid transparent;
  border-right: 4px solid transparent;
  border-top: 4px solid #fff;
  opacity: 0.5;
  filter: alpha(opacity=50);
  opacity: 0.5;
  filter: alpha(opacity= 50 );
  content: "";
}
.caret-icon {
  display: inline-block;
  width: 0;
  height: 0;
  vertical-align: middle;
  border-left: 4px solid transparent;
  border-right: 4px solid transparent;
  border-top: 4px solid black;
  opacity: 0.3;
  filter: alpha(opacity=30);
  opacity: 0.3;
  filter: alpha(opacity= 30 );
  content: "";
}
.positive-circle-icon {
  background: url("/assets/images/icon/positive-circle-icon.png");
}
.negative-circle-icon {
  background: url("/assets/images/icon/negative-circle-icon.png");
}
.neutral-up-circle-icon {
  background: url("/design/images/icons-sprite.png") -136px -85px;
}
.neutral-down-circle-icon {
  background: url("/design/images/icons-sprite.png") -152px -85px;
}
/* Social Icons */
.facebook-icon {
  background: url("/design/images/icons-sprite.png") 0 -17px;
}
.twitter-icon {
  background: url("/design/images/icons-sprite.png") -17px -17px;
}
.googleplus-icon {
  background: url("/design/images/icons-sprite.png") -34px -17px;
}
.instagram-icon {
  background: url("/design/images/icons-sprite.png") -51px -17px;
}
.other-icon {
  background: url("/design/images/icons-sprite.png") -68px -17px;
}
/* Media Icons */
.image-icon {
  background: url("/design/images/icons-sprite.png") 0 0;
}
.image-new-icon {
  background: url("/design/images/icons-sprite.png") -6px -463px;
}
.text-icon {
  background: url("/design/images/icons-sprite.png") -18px 0;
}
.text-new-icon {
  background: url("/design/images/icons-sprite.png") -34px -463px;
}
.link-icon {
  background: url("/design/images/icons-sprite.png") -33px 0;
}
.link-new-icon {
  background: url("/design/images/icons-sprite.png") -60px -463px;
}
.gallery-icon {
  background: url("/design/images/icons-sprite.png") -51px 0;
}
.gallery-new-icon {
  background: url("/design/images/icons-sprite.png") -82px -463px;
}
.video-icon {
  background: url("/design/images/icons-sprite.png") -68px 0;
}
/* Utility Icons */
.cog-icon {
  background: url("/design/images/icons-sprite.png") -68px 0;
}
.delete-email {
  background: url("/design/images/icons-sprite.png") -17px -85px;
}
.prev-icon {
  background: url("/design/images/icons-sprite.png") -34px -85px;
}
.next-icon {
  background: url("/design/images/icons-sprite.png") -50px -85px;
}
.down-icon {
  background: url("/design/images/icons-sprite.png") -68px -85px;
}
.comment-icon {
  background: url("/design/images/icons-sprite.png") -52px -430px;
  height: 20px;
  cursor: pointer;
  position: relative;
  width: 20px;
}
.comment-icon span {
  display: none;
}
.comment-icon.has-comments {
  background: url("/design/images/icons-sprite.png") -75px -430px;
  width: 18px;
  height: 20px;
}
.comment-icon.has-comments span {
  display: block;
  font-size: 10px;
  width: 16px;
  text-align: center;
  margin-top: 1px;
  font-weight: bold;
  margin-left: 1px;
}
.info-icon {
  background: url("/design/images/icons-sprite.png") -18px -84px;
}
.paperclip-icon {
  background: url("/design/images/icons-sprite.png") -34px -135px;
}
.email-icon {
  background: url("/design/images/icons-sprite.png") -17px -135px;
}
.grip-icon {
  background: url("/design/images/icons-sprite.png") -67px -136px;
}
/* Big Icons */
.new-post-icon {
  background: url("/assets/images/big-sprite.png") 0 0;
}
.approval-icon {
  background: url("/assets/images/big-sprite.png") -20px 0;
}
.open-mail-icon {
  background: url("/assets/images/big-sprite.png") -40px 0;
}
.audalytics-icon {
  background: url("/assets/images/big-sprite.png") -60px 0;
}
.calendar-icon {
  background: url("/assets/images/big-sprite.png") -100px 0;
}
.chart-icon {
  background: url("/assets/images/big-sprite.png") -120px 0;
}
.post-icon {
  background: url("/assets/images/big-sprite.png") -14 0px 0;
}
.client-icon {
  background: url("/design/images/icons-sprite.png") -213px -251px;
  width: 25px;
  height: 15px;
}
.column-icon {
  background: url("/assets/images/big-sprite.png") -160px 0;
}
.list-icon {
  background: url("/assets/images/big-sprite.png") -180px 0;
}
.speechbubble-icon {
  background: url("/assets/images/big-sprite.png") -200px 0;
}
.demographic-icon {
  background: url("/assets/images/big-sprite.png") -220px 0;
}
.postit-icon {
  background: url("/design/images/icons-sprite.png") -32px -432px;
  cursor: pointer;
  position: relative;
  margin: 2px 0 0 0 !important;
}
.postit-deactivated-icon {
  background: url("/design/images/icons-sprite.png") -9px -432px;
  margin: 2px 0 0 0 !important;
}
/* =Sets
==================================*/
/* Glyph Set, Courtesy of Twitter Bootstrap*/
[class^="icon-glyph"],
[class*=" icon-glyph"] {
  display: inline-block;
  width: 14px;
  height: 14px;
  line-height: 14px;
  vertical-align: -2px;
  background-image: url('/assets/images/icon/small-icons-black.png');
  background-position: 14px 14px;
  background-repeat: no-repeat;
}
.icon-white {
  background-image: url('/assets/images/icon/small-icons-white.png');
}
.icon-glyph-glass {
  background-position: 0      0;
}
.icon-glyph-music {
  background-position: -24px 0;
}
.icon-glyph-search {
  background-position: -48px 0;
}
.icon-glyph-envelope {
  background-position: -72px 0;
}
.icon-glyph-heart {
  background-position: -96px 0;
}
.icon-glyph-star {
  background-position: -120px 0;
}
.icon-glyph-star-empty {
  background-position: -144px 0;
}
.icon-glyph-user {
  background-position: -168px 0;
}
.icon-glyph-film {
  background-position: -192px 0;
}
.icon-glyph-th-large {
  background-position: -216px 0;
}
.icon-glyph-th {
  background-position: -240px 0;
}
.icon-glyph-th-list {
  background-position: -264px 0;
}
.icon-glyph-ok {
  background-position: -288px 0;
}
.icon-glyph-remove {
  background-position: -312px 0;
}
.icon-glyph-zoom-in {
  background-position: -336px 0;
}
.icon-glyph-zoom-out {
  background-position: -360px 0;
}
.icon-glyph-off {
  background-position: -384px 0;
}
.icon-glyph-signal {
  background-position: -408px 0;
}
.icon-glyph-cog {
  background-position: -432px 0;
}
.icon-glyph-trash {
  background-position: -456px 0;
}
.icon-glyph-home {
  background-position: 0 -24px;
}
.icon-glyph-file {
  background-position: -24px -24px;
}
.icon-glyph-time {
  background-position: -48px -24px;
}
.icon-glyph-road {
  background-position: -72px -24px;
}
.icon-glyph-download-alt {
  background-position: -96px -24px;
}
.icon-glyph-download {
  background-position: -120px -24px;
}
.icon-glyph-upload {
  background-position: -144px -24px;
}
.icon-glyph-inbox {
  background-position: -168px -24px;
}
.icon-glyph-play-circle {
  background-position: -192px -24px;
}
.icon-glyph-repeat {
  background-position: -216px -24px;
}
.icon-glyph-refresh {
  background-position: -240px -24px;
}
.icon-glyph-list-alt {
  background-position: -264px -24px;
}
.icon-glyph-lock {
  background-position: -287px -24px;
}
.icon-glyph-flag {
  background-position: -312px -24px;
}
.icon-glyph-headphones {
  background-position: -336px -24px;
}
.icon-glyph-volume-off {
  background-position: -360px -24px;
}
.icon-glyph-volume-down {
  background-position: -384px -24px;
}
.icon-glyph-volume-up {
  background-position: -408px -24px;
}
.icon-glyph-qrcode {
  background-position: -432px -24px;
}
.icon-glyph-barcode {
  background-position: -456px -24px;
}
.icon-glyph-tag {
  background-position: 0 -48px;
}
.icon-glyph-tags {
  background-position: -25px -48px;
}
.icon-glyph-book {
  background-position: -48px -48px;
}
.icon-glyph-bookmark {
  background-position: -72px -48px;
}
.icon-glyph-print {
  background-position: -96px -48px;
}
.icon-glyph-camera {
  background-position: -120px -48px;
}
.icon-glyph-font {
  background-position: -144px -48px;
}
.icon-glyph-bold {
  background-position: -167px -48px;
}
.icon-glyph-italic {
  background-position: -192px -48px;
}
.icon-glyph-text-height {
  background-position: -216px -48px;
}
.icon-glyph-text-width {
  background-position: -240px -48px;
}
.icon-glyph-align-left {
  background-position: -264px -48px;
}
.icon-glyph-align-center {
  background-position: -288px -48px;
}
.icon-glyph-align-right {
  background-position: -312px -48px;
}
.icon-glyph-align-justify {
  background-position: -336px -48px;
}
.icon-glyph-list {
  background-position: -360px -48px;
}
.icon-glyph-indent-left {
  background-position: -384px -48px;
}
.icon-glyph-indent-right {
  background-position: -408px -48px;
}
.icon-glyph-facetime-video {
  background-position: -432px -48px;
}
.icon-glyph-picture {
  background-position: -456px -48px;
}
.icon-glyph-pencil {
  background-position: 0 -72px;
}
.icon-glyph-map-marker {
  background-position: -24px -72px;
}
.icon-glyph-adjust {
  background-position: -48px -72px;
}
.icon-glyph-tint {
  background-position: -72px -72px;
}
.icon-glyph-edit {
  background-position: -96px -72px;
}
.icon-glyph-share {
  background-position: -120px -72px;
}
.icon-glyph-check {
  background-position: -144px -72px;
}
.icon-glyph-move {
  background-position: -168px -72px;
}
.icon-glyph-step-backward {
  background-position: -192px -72px;
}
.icon-glyph-fast-backward {
  background-position: -216px -72px;
}
.icon-glyph-backward {
  background-position: -240px -72px;
}
.icon-glyph-play {
  background-position: -264px -72px;
}
.icon-glyph-pause {
  background-position: -288px -72px;
}
.icon-glyph-stop {
  background-position: -312px -72px;
}
.icon-glyph-forward {
  background-position: -336px -72px;
}
.icon-glyph-fast-forward {
  background-position: -360px -72px;
}
.icon-glyph-step-forward {
  background-position: -384px -72px;
}
.icon-glyph-eject {
  background-position: -408px -72px;
}
.icon-glyph-chevron-left {
  background-position: -432px -72px;
}
.icon-glyph-chevron-right {
  background-position: -456px -72px;
}
.icon-glyph-plus-sign {
  background-position: 0 -96px;
}
.icon-glyph-minus-sign {
  background-position: -24px -96px;
}
.icon-glyph-remove-sign {
  background-position: -48px -96px;
}
.icon-glyph-ok-sign {
  background-position: -72px -96px;
}
.icon-glyph-question-sign {
  background-position: -96px -96px;
}
.icon-glyph-info-sign {
  background-position: -120px -96px;
}
.icon-glyph-screenshot {
  background-position: -144px -96px;
}
.icon-glyph-remove-circle {
  background-position: -168px -96px;
}
.icon-glyph-ok-circle {
  background-position: -192px -96px;
}
.icon-glyph-ban-circle {
  background-position: -216px -96px;
}
.icon-glyph-arrow-left {
  background-position: -240px -96px;
}
.icon-glyph-arrow-right {
  background-position: -264px -96px;
}
.icon-glyph-arrow-up {
  background-position: -289px -96px;
}
.icon-glyph-arrow-down {
  background-position: -312px -96px;
}
.icon-glyph-share-alt {
  background-position: -336px -96px;
}
.icon-glyph-resize-full {
  background-position: -360px -96px;
}
.icon-glyph-resize-small {
  background-position: -384px -96px;
}
.icon-glyph-plus {
  background-position: -408px -96px;
}
.icon-glyph-minus {
  background-position: -433px -96px;
}
.icon-glyph-asterisk {
  background-position: -456px -96px;
}
.icon-glyph-exclamation-sign {
  background-position: 0 -120px;
}
.icon-glyph-gift {
  background-position: -24px -120px;
}
.icon-glyph-leaf {
  background-position: -48px -120px;
}
.icon-glyph-fire {
  background-position: -72px -120px;
}
.icon-glyph-eye-open {
  background-position: -96px -120px;
}
.icon-glyph-eye-close {
  background-position: -120px -120px;
}
.icon-glyph-warning-sign {
  background-position: -144px -120px;
}
.icon-glyph-plane {
  background-position: -168px -120px;
}
.icon-glyph-calendar {
  background-position: -192px -120px;
}
.icon-glyph-random {
  background-position: -216px -120px;
}
.icon-glyph-comment {
  background-position: -240px -120px;
}
.icon-glyph-magnet {
  background-position: -264px -120px;
}
.icon-glyph-chevron-up {
  background-position: -288px -120px;
}
.icon-glyph-chevron-down {
  background-position: -313px -119px;
}
.icon-glyph-retweet {
  background-position: -336px -120px;
}
.icon-glyph-shopping-cart {
  background-position: -360px -120px;
}
.icon-glyph-folder-close {
  background-position: -384px -120px;
}
.icon-glyph-folder-open {
  background-position: -408px -120px;
}
.icon-glyph-resize-vertical {
  background-position: -432px -119px;
}
.icon-glyph-resize-horizontal {
  background-position: -456px -118px;
}
.icon-glyph-hdd {
  background-position: 0 -144px;
}
.icon-glyph-bullhorn {
  background-position: -24px -144px;
}
.icon-glyph-bell {
  background-position: -48px -144px;
}
.icon-glyph-certificate {
  background-position: -72px -144px;
}
.icon-glyph-thumbs-up {
  background-position: -96px -144px;
}
.icon-glyph-thumbs-down {
  background-position: -120px -144px;
}
.icon-glyph-hand-right {
  background-position: -144px -144px;
}
.icon-glyph-hand-left {
  background-position: -168px -144px;
}
.icon-glyph-hand-up {
  background-position: -192px -144px;
}
.icon-glyph-hand-down {
  background-position: -216px -144px;
}
.icon-glyph-circle-arrow-right {
  background-position: -240px -144px;
}
.icon-glyph-circle-arrow-left {
  background-position: -264px -144px;
}
.icon-glyph-circle-arrow-up {
  background-position: -288px -144px;
}
.icon-glyph-circle-arrow-down {
  background-position: -312px -144px;
}
.icon-glyph-globe {
  background-position: -336px -144px;
}
.icon-glyph-wrench {
  background-position: -360px -144px;
}
.icon-glyph-tasks {
  background-position: -384px -144px;
}
.icon-glyph-filter {
  background-position: -408px -144px;
}
.icon-glyph-briefcase {
  background-position: -432px -144px;
}
.icon-glyph-fullscreen {
  background-position: -456px -144px;
}
/* Responsive 12 Grid
Taken from Twitter bootstrap but made to work with fixed AND fluid. ~Steve
*/
.grid-12 [class*="span"]:first-child {
  margin-left: 0;
}
.grid-12 .grid-row {
  float: left;
  width: 100%;
  margin-bottom: 20px;
}
.grid-12 .span1 {
  width: 5.982905983%;
  margin-left: 2.564102564%;
  float: left;
}
.grid-12 .span3 {
  width: 17.9487179%;
  margin-left: 2.564102564%;
  float: left;
}
.grid-12 .span4 {
  width: 31.623931624%;
  margin-left: 2.564102564%;
  float: left;
}
.grid-12 .span6 {
  width: 48.717948718%;
  margin-left: 2.564102564%;
  float: left;
}
.grid-12 .span12 {
  width: 100%;
}
.grid-12 .main-section {
  box-shadow: 0 0 2px #bbb inset, 0 1px 0px white inset;
  border: none;
}
@media screen and (max-width: 1023px) {
  .grid-12 .grid-row {
    margin: 0;
  }
  .grid-12 .span6 {
    width: 100%;
    margin: 0 0 20px 0;
  }
}
/* =Utility Helpers
==================================*/
.scrollable {
  overflow-y: auto;
  overflow-x: hidden;
}
.hide {
  display: none;
}
.hide-important {
  display: none !important;
}
.invisible {
  visibility: hidden;
}
.show {
  display: inherit !important;
}
.hoverable {
  cursor: pointer;
}
.hoverable:hover {
  background: #fffee7;
}
.pointer {
  cursor: pointer;
}
.no-scroll {
  overflow: hidden;
}
.crop {
  overflow: hidden;
}
.center-text {
  text-align: center !important;
}
.default-layout {
  margin: 0;
  padding: 0;
}
.bolder {
  font-weight: bolder;
}
.splitForPrint {
  page-break-after: avoid;
  page-break-before: avoid;
  page-break-inside: avoid;
}
.print-only {
  display: none;
}
.force-screen-size {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
@media print {
  .print-only {
    display: block;
  }
}
/* =Hide with Widths
==================================*/
.ipad-portrait-width-show {
  display: none;
}
.mobile-width-show {
  display: none;
}
@media screen and (max-width: 768px) {
  .ipad-portrait-width-hidden {
    display: none !important;
  }
  .ipad-portrait-width-show {
    display: block !important;
  }
}
/* Libraries */